Original Post
Subject:General Questions
Body:Hello Chris, 1-) Can you please clarify the difference between a shell, terminal and Bash? Are  they the same? Because I keep hearing them but i am not sure if they are used  interchangeably or...? 2-) Just curious, how did you change the colour of your shell's background (or terminal or what ever)? 3-) When you were in the vi editor, how do you switch between the two modes? What do you press? Cheers
----------------------------------------------------------------------------------------------------
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result COSINE                         
Subject:General Questions           

Body:ANONYMOUS wrote:

> 1-) Can you please clarify the difference between a shell, terminal and Bash? Are 
> they the same? Because I keep hearing them but i am not sure if they are used 
> interchangeably or...?

Many textbook authors and writers on the internet will use the terms interchangeably, so it takes a bit of context to 
work out what's being discussed.  Pedantically, they 3 are distinct things, so sorry if that wasn't clear from Friday's 
workshop.

A *terminal* program renders and manages the rectangular graphical window, rendering colours, fonts, etc, and responds 
to keyboard, mouse, and scrollbar events. Some common examples include xterm (on Linux), and Terminal and iTerm2 (on 
macOS):

  https://en.wikipedia.org/wiki/List_of_terminal_emulators

A terminal runs as an operating system process, and can itself created and manage one or more other processes, receive 
the direct *their* keyboard events, and receive and render the character output of those processes.  While terminal 
programs can usually permit each of these other processes to be individually specified, each is usually an instance of a 
*shell* program. If a terminal program simultaneously runs several shell processes, each is usually managed within a 
separate tab (as on a browser) to separate their inputs and outputs.  We often say that these other processes runs 
'behind' the terminal process.

A *shell* program is the thing that issues a prompt, receives a line of character input, breaks the line into space- and 
tab-separated words, and based on the first word on each line performs and 'internal' action, or executes and waits for 
an external program (such as 'date', 'cal', or 'cc'). When the shell creates an external process, it passes to that 
process each of the words from the command-line as its arguments, so that the process knows what to do: 'cal -y',
'cc -o try try.c',  etc.
Of note, the shell does not know what any of the words/arguments mean, and just passes them on.
When each new process produces some character-based output, it is received and rendered by the terminal process.

*bash* is one type of shell program,  just like C and Java are types of programming languages. There's many different 
shells - others include zsh (the default on macOS), zsh, csh, ash, rc, ...)  Each different shell supports/recognizes a 
different syntax, but each has the same primary role of creating and managing other processes.

 
> 2-) Just curious, how did you change the colour of your shell's background (or 
> terminal or what ever)?

(with respect to the descriptions above) I use iTerm2 on macOS (highly recommended!).  It supports 'profiles' which 
group together (the program/shell to run, the size of the window, the background and foreground colours, the font, ...)
Other terminal programs have their own mechanisms for setting these attributes and, as suggested,  you'll need to read 
their manuals or online documentation.
This from 2004!  https://www.linuxquestions.org/questions/debian-26/how-to-change-background-and-fonts-color-in-xterm-156290/



> 3-) When you were in the vi editor, how do you switch between the two modes? What do 
> you press?

vi is always in one of two modes - command-mode (the starting state) and insert-mode.  You move to insert-mode by 
invoking an insertion command (such as i for insert or a for append).  From there you stay in insert-mode until you 
press the Escape key (usually top-left of keyboard),  which takes you back to command-mode.

And, almost an internet meme, the most important knowledge is how to get out of vi!

  https://www.howtogeek.com/411210/how-to-exit-the-vi-or-vim-editor/
  https://stackoverflow.com/questions/11828270/how-do-i-exit-the-vim-editor

___
Hope this all helps,                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result JACCARD                         
Subject:General Questions           

Body:ANONYMOUS wrote:

> Hello Chris,
> 
> 1-) Can you please clarify the difference between a shell, terminal and Bash? Are 
> they the same? Because I keep hearing them but i am not sure if they are used 
> interchangeably or...?
> 
> 2-) Just curious, how did you change the colour of your shell's background (or 
> terminal or what ever)?
> 
> 3-) When you were in the vi editor, how do you switch between the two modes? What do 
> you press?
> 
> Cheers



Not Chris,

Firstly, yeah they are in a way interchangeable they are just basically allow the user(Us) 
and/or programs to interact with the operating system. 

Secondly, depends on what OS you are using for your command line. Google it("How to alter 
terminal on OSX" something like that.

Thirdly, Can't help you there sorry.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result TFIDF                         
Subject:General Questions           

Body:ANONYMOUS wrote:

> Hello Chris,
> 
> 1-) Can you please clarify the difference between a shell, terminal and Bash? Are 
> they the same? Because I keep hearing them but i am not sure if they are used 
> interchangeably or...?
> 
> 2-) Just curious, how did you change the colour of your shell's background (or 
> terminal or what ever)?
> 
> 3-) When you were in the vi editor, how do you switch between the two modes? What do 
> you press?
> 
> Cheers



Not Chris,

Firstly, yeah they are in a way interchangeable they are just basically allow the user(Us) 
and/or programs to interact with the operating system. 

Secondly, depends on what OS you are using for your command line. Google it("How to alter 
terminal on OSX" something like that.

Thirdly, Can't help you there sorry.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result USE                         
Subject:General Questions           

Body:ANONYMOUS wrote:

> 1-) Can you please clarify the difference between a shell, terminal and Bash? Are 
> they the same? Because I keep hearing them but i am not sure if they are used 
> interchangeably or...?

Many textbook authors and writers on the internet will use the terms interchangeably, so it takes a bit of context to 
work out what's being discussed.  Pedantically, they 3 are distinct things, so sorry if that wasn't clear from Friday's 
workshop.

A *terminal* program renders and manages the rectangular graphical window, rendering colours, fonts, etc, and responds 
to keyboard, mouse, and scrollbar events. Some common examples include xterm (on Linux), and Terminal and iTerm2 (on 
macOS):

  https://en.wikipedia.org/wiki/List_of_terminal_emulators

A terminal runs as an operating system process, and can itself created and manage one or more other processes, receive 
the direct *their* keyboard events, and receive and render the character output of those processes.  While terminal 
programs can usually permit each of these other processes to be individually specified, each is usually an instance of a 
*shell* program. If a terminal program simultaneously runs several shell processes, each is usually managed within a 
separate tab (as on a browser) to separate their inputs and outputs.  We often say that these other processes runs 
'behind' the terminal process.

A *shell* program is the thing that issues a prompt, receives a line of character input, breaks the line into space- and 
tab-separated words, and based on the first word on each line performs and 'internal' action, or executes and waits for 
an external program (such as 'date', 'cal', or 'cc'). When the shell creates an external process, it passes to that 
process each of the words from the command-line as its arguments, so that the process knows what to do: 'cal -y',
'cc -o try try.c',  etc.
Of note, the shell does not know what any of the words/arguments mean, and just passes them on.
When each new process produces some character-based output, it is received and rendered by the terminal process.

*bash* is one type of shell program,  just like C and Java are types of programming languages. There's many different 
shells - others include zsh (the default on macOS), zsh, csh, ash, rc, ...)  Each different shell supports/recognizes a 
different syntax, but each has the same primary role of creating and managing other processes.

 
> 2-) Just curious, how did you change the colour of your shell's background (or 
> terminal or what ever)?

(with respect to the descriptions above) I use iTerm2 on macOS (highly recommended!).  It supports 'profiles' which 
group together (the program/shell to run, the size of the window, the background and foreground colours, the font, ...)
Other terminal programs have their own mechanisms for setting these attributes and, as suggested,  you'll need to read 
their manuals or online documentation.
This from 2004!  https://www.linuxquestions.org/questions/debian-26/how-to-change-background-and-fonts-color-in-xterm-156290/



> 3-) When you were in the vi editor, how do you switch between the two modes? What do 
> you press?

vi is always in one of two modes - command-mode (the starting state) and insert-mode.  You move to insert-mode by 
invoking an insertion command (such as i for insert or a for append).  From there you stay in insert-mode until you 
press the Escape key (usually top-left of keyboard),  which takes you back to command-mode.

And, almost an internet meme, the most important knowledge is how to get out of vi!

  https://www.howtogeek.com/411210/how-to-exit-the-vi-or-vim-editor/
  https://stackoverflow.com/questions/11828270/how-do-i-exit-the-vim-editor

___
Hope this all helps,                
|                                         |
|                                         |
<<<<----------------------------------->>>>
----------------------------------------------------------------------------------------------------
Original Post
Subject:error: inactive developer path
Body:Hi Chris, I have this error when trying to compile a file: xcrun: error: invalid active developer path (/Library/Developer CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun. What does this mean?
----------------------------------------------------------------------------------------------------
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result COSINE                         
Subject:error: inactive developer path           

Body:ANONYMOUS wrote:

> Hi Chris,
> 
> I have this error when trying to compile  a file:
> 
> xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), 
> missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
> 
> What does this mean?

Not seen the error before - but it's (only) from macOS.

Have you downloaded the Xcode package, from the App Store?
Did you run xcrun yourself (by typing it in), or did 'cc' throw up that error?

On my (working) Big Sur installation of Xcode, I do not have the file 
/Library/Developer/CommandLineTools/usr/bin/xcrun. either.

My xcrun is located in. /usr/bin/xcrun

What is the output when you run:

   prompt> which xcrun

??                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result JACCARD                         
Subject:error: inactive developer path           

Body:ANONYMOUS wrote:

> Hi Chris,
> 
> I have this error when trying to compile  a file:
> 
> xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), 
> missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
> 
> What does this mean?

Not seen the error before - but it's (only) from macOS.

Have you downloaded the Xcode package, from the App Store?
Did you run xcrun yourself (by typing it in), or did 'cc' throw up that error?

On my (working) Big Sur installation of Xcode, I do not have the file 
/Library/Developer/CommandLineTools/usr/bin/xcrun. either.

My xcrun is located in. /usr/bin/xcrun

What is the output when you run:

   prompt> which xcrun

??                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result TFIDF                         
Subject:error: inactive developer path           

Body:ANONYMOUS wrote:

> Hi Chris,
> 
> I have this error when trying to compile  a file:
> 
> xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), 
> missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
> 
> What does this mean?

Not seen the error before - but it's (only) from macOS.

Have you downloaded the Xcode package, from the App Store?
Did you run xcrun yourself (by typing it in), or did 'cc' throw up that error?

On my (working) Big Sur installation of Xcode, I do not have the file 
/Library/Developer/CommandLineTools/usr/bin/xcrun. either.

My xcrun is located in. /usr/bin/xcrun

What is the output when you run:

   prompt> which xcrun

??                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result USE                         
Subject:error: inactive developer path           

Body:Previously, <poster008@student.uwa.edu.au> wrote:

> I found the following StackExchange posting by searching for some of the specific text from the error message:
>   https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a

And, wow, look at how many times the question and the accepted answer have been upvoted!                
|                                         |
|                                         |
<<<<----------------------------------->>>>
----------------------------------------------------------------------------------------------------
Original Post
Subject:char data type
Body:Hi Chris/Amitava, I was doing Lab 1 question 9 and I realize some things: 1. I can use atoi on an argument, but I get an error when I try to use it on the individual characters of the argument. 2. I can use isdigit on the individual characters of an argument, but I get an error when I try to use it on the argument. Can you explain why this is the case? Thanks.
----------------------------------------------------------------------------------------------------
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result COSINE                         
Subject:char data type           

Body:ANONYMOUS wrote:

Hi,

> I was doing Lab 1 question 9 and I realize some things:
> 1. I can use atoi on an argument, but I get an error when I try to use it on the 
> individual characters of the argument.

As in most programming languages, the datatypes of a function's parameters, and its returned 
value are very important.  n the case of the atoi() function, its single parameter must be a 
sequence of characters (a string in C), because formatted representations of integers are 
often longer than a single character (e.g. "123").

A single character is not a string, and the value and internal representation of the 
character '3' is different to the string "3".

> 2. I can use isdigit on the individual characters of an argument, but I get an error 
> when I try to use it on the argument.

Similarly, the isdigit() function requires a single character argument, but not a string. In 
all cases, a single character can be checked to see if it's a digit, or not, but strings can 
contain more than a single character - and the function is not named  isnumber().

Amitava will be discussing the relationship and differences between C's characters and 
strings, in Lecture 6, tomorrow.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result JACCARD                         
Subject:char data type           

Body:ANONYMOUS wrote:

Hi,

> I was doing Lab 1 question 9 and I realize some things:
> 1. I can use atoi on an argument, but I get an error when I try to use it on the 
> individual characters of the argument.

As in most programming languages, the datatypes of a function's parameters, and its returned 
value are very important.  n the case of the atoi() function, its single parameter must be a 
sequence of characters (a string in C), because formatted representations of integers are 
often longer than a single character (e.g. "123").

A single character is not a string, and the value and internal representation of the 
character '3' is different to the string "3".

> 2. I can use isdigit on the individual characters of an argument, but I get an error 
> when I try to use it on the argument.

Similarly, the isdigit() function requires a single character argument, but not a string. In 
all cases, a single character can be checked to see if it's a digit, or not, but strings can 
contain more than a single character - and the function is not named  isnumber().

Amitava will be discussing the relationship and differences between C's characters and 
strings, in Lecture 6, tomorrow.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result TFIDF                         
Subject:char data type           

Body:ANONYMOUS wrote:

Hi,

> I was doing Lab 1 question 9 and I realize some things:
> 1. I can use atoi on an argument, but I get an error when I try to use it on the 
> individual characters of the argument.

As in most programming languages, the datatypes of a function's parameters, and its returned 
value are very important.  n the case of the atoi() function, its single parameter must be a 
sequence of characters (a string in C), because formatted representations of integers are 
often longer than a single character (e.g. "123").

A single character is not a string, and the value and internal representation of the 
character '3' is different to the string "3".

> 2. I can use isdigit on the individual characters of an argument, but I get an error 
> when I try to use it on the argument.

Similarly, the isdigit() function requires a single character argument, but not a string. In 
all cases, a single character can be checked to see if it's a digit, or not, but strings can 
contain more than a single character - and the function is not named  isnumber().

Amitava will be discussing the relationship and differences between C's characters and 
strings, in Lecture 6, tomorrow.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result USE                         
Subject:char data type           

Body:ANONYMOUS wrote:

Hi,

> I was doing Lab 1 question 9 and I realize some things:
> 1. I can use atoi on an argument, but I get an error when I try to use it on the 
> individual characters of the argument.

As in most programming languages, the datatypes of a function's parameters, and its returned 
value are very important.  n the case of the atoi() function, its single parameter must be a 
sequence of characters (a string in C), because formatted representations of integers are 
often longer than a single character (e.g. "123").

A single character is not a string, and the value and internal representation of the 
character '3' is different to the string "3".

> 2. I can use isdigit on the individual characters of an argument, but I get an error 
> when I try to use it on the argument.

Similarly, the isdigit() function requires a single character argument, but not a string. In 
all cases, a single character can be checked to see if it's a digit, or not, but strings can 
contain more than a single character - and the function is not named  isnumber().

Amitava will be discussing the relationship and differences between C's characters and 
strings, in Lecture 6, tomorrow.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
----------------------------------------------------------------------------------------------------
Original Post
Subject:Segmentation fault (core dumped)
Body:I was doing the credt card task in the labsheet and i encounted this error after i had compiled my code and tried to run it
 Segmentation fault (core dumped)
----------------------------------------------------------------------------------------------------
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result COSINE                         
Subject:Segmentation fault (core dumped)           

Body:Previously, <poster080@student.uwa.edu.au> wrote:

> It appears there is something wrong with this line of code 
> int numbers = strlen(argv[2]);
> but i am not sure what, this is in the main function and i am trying to get length of the char* 
> argv[2].

That line looks quite harmless - assuming that you're invoking your program with sufficient command-line 
arguments.  You'll be needing:

  ./program  huge  elephant

to be able to get the length of the string  elephant.
Providing sufficient arguments?                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result JACCARD                         
Subject:Segmentation fault (core dumped)           

Body:Previously, <poster080@student.uwa.edu.au> wrote:

> It appears there is something wrong with this line of code 
> int numbers = strlen(argv[2]);
> but i am not sure what, this is in the main function and i am trying to get length of the char* 
> argv[2].

That line looks quite harmless - assuming that you're invoking your program with sufficient command-line 
arguments.  You'll be needing:

  ./program  huge  elephant

to be able to get the length of the string  elephant.
Providing sufficient arguments?                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result TFIDF                         
Subject:Segmentation fault (core dumped)           

Body:Previously, <poster080@student.uwa.edu.au> wrote:

> Any suggestions as to why this happened cheers

It's not possible to say, definitively, but nearly all segmentation violations are the result 
of attempting to access memory other than what you program 'owns', or in a manner inconsistent 
with the way it's been declared.

As you're working on the credit card problem, examining individual characters in a string (an 
array of characters), my guess is that you're attempting to access somewhere 'outside' of the 
memory allocated for that string.  Check the indices you're using to access the array's 
characters.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result USE                         
Subject:Segmentation fault (core dumped)           

Body:Previously, <poster080@student.uwa.edu.au> wrote:

> It appears there is something wrong with this line of code 
> int numbers = strlen(argv[2]);
> but i am not sure what, this is in the main function and i am trying to get length of the char* 
> argv[2].

That line looks quite harmless - assuming that you're invoking your program with sufficient command-line 
arguments.  You'll be needing:

  ./program  huge  elephant

to be able to get the length of the string  elephant.
Providing sufficient arguments?                
|                                         |
|                                         |
<<<<----------------------------------->>>>
----------------------------------------------------------------------------------------------------
Original Post
Subject:How to actually open rotate.c
Body:Hey, I've got a few questions that I need clarifying;
1) When using ubuntu, do I use it through powershell (I use Microsoft) and docker desktop, or do I directly use it on ubuntu? (Could be a confusing question but I honestly have confused myself siginificantly)
2) I downloaded VIM, supposedly the improved version of Vi, how do I open the rotate.c file through VIM?
3) Depending on the answers to the other questions, this one may be negligent but do I run an ubuntu (myubuntu) container on powershell then supposedly access the rotate.c file through VIM on powershell, and if so how do I access files on my laptop in the terminal? Sorry if these questions have been asked before but I honestly don't know if the other questions I've seen are actually asking the same question, just cause I'm befuddled.
Also I have done this: https://teaching.csse.uwa.edu.au/units/CITS2002/labsheets/install-linux.php Pretty much I'm confused on how to open the C file as to start editing it and executing it etc. Thank you so much.
----------------------------------------------------------------------------------------------------
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result COSINE                         
Subject:How to actually open rotate.c           

Body:ANONYMOUS wrote:

> Hey,
> 
> I've got a few questions that I need clarifying;
> 
> 1) When using ubuntu, do I use it through powershell (I use Microsoft) and docker 
> desktop, or do I directly use it on ubuntu? (Could be a confusing question but I 
> honestly have confused myself siginificantly)
> 
> 2) I downloaded VIM, supposedly the improved version of Vi, how do I open the rotate.c 
> file through VIM?
> 
> 3) Depending on the answers to the other questions, this one may be negligent but do I 
> run an ubuntu (myubuntu) container on powershell then supposedly access the rotate.c 
> file through VIM on powershell, and if so how do I access files on my laptop in the 
> terminal?
> 
> Sorry if these questions have been asked before but I honestly don't know if the other 
> questions I've seen are actually asking the same question, just cause I'm befuddled. 
> Also I have done this:
> https://teaching.csse.uwa.edu.au/units/CITS2002/labsheets/install-linux.php
> 
> Pretty much I'm confused on how to open the C file as to start editing it and 
> executing it etc.
> 
> Thank you so much.

I'm not a lecturer or a lab facilitator so by all means I could be somewhat wrong.

1) Confusing question but the idea if your intending to use docker is to run ubuntu using 
docker through powershell. Docker is an application that you can interact with through ur 
powershell, the docker application is quite interesting, it creates "images" (think of it as 
a little portal) of different Operating systems (in our case, Ubuntu) within ur local/host OS 
(yours being Windows). 

Within the images there are "containers" (I could be wrong but I imagine they are the 
different user's of the OS), throughout the unit you can create new containers as you like, 
or keep coming back to the same container so your files in that container can be interacted 
with each session. You will be using your powershell to communicate with docker through 
commands and open your little Ubuntu portal, in this portal you should be doing your software 
development in this unit.

2) Navigate to the folder holding rotate.c through your powershell and then type "vim 
rotate.c" to edit the file. However, as stated before this file should be within your 
container, you can do this by using docker commands to copy or simply creating a new c file 
in the container and copy and pasting the text.

3) This question is also confusing and I think it's important to understand the role of 
certain tools we are using:
Docker - application we use to create images of other OS within our host OS, with each 
container representing a different user (with different folders) of those images
VIM - a simple text editor
Powershell - a command driven application that we use to communicate to our OS and it's 
applications.

With that in mind, through powershell we communicate to our docker application and instruct 
it to open our myubuntu container ("portal"). Once opened the prompt will change to "root" 
with a bunch of numbers/letters indicating the powershell is now communicating to the 
container. We then can create our own files in this container, including rotate.c, we can use 
VIM to create such files since it is a text editor (high level software language files are 
essentially just text files with special syntax). Once done you can simply exit your 
container by communicating through powershell to the docker container, putting you back onto 
your host OS command-line (powershell).

I've ommitted specific commands used etc because it would take ages laying them all out, what 
helps is understanding what each tool use is, and then researching how to do certain tasks 
that are in each tools breadth. Such as opening and editing a file in vim, or navigating to a 
different folder in powershell, or creating a new container in your docker container.

Hope this helps.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result JACCARD                         
Subject:How to actually open rotate.c           

Body:ANONYMOUS wrote:

> Hey,
> 
> I've got a few questions that I need clarifying;
> 
> 1) When using ubuntu, do I use it through powershell (I use Microsoft) and docker 
> desktop, or do I directly use it on ubuntu? (Could be a confusing question but I 
> honestly have confused myself siginificantly)
> 
> 2) I downloaded VIM, supposedly the improved version of Vi, how do I open the rotate.c 
> file through VIM?
> 
> 3) Depending on the answers to the other questions, this one may be negligent but do I 
> run an ubuntu (myubuntu) container on powershell then supposedly access the rotate.c 
> file through VIM on powershell, and if so how do I access files on my laptop in the 
> terminal?
> 
> Sorry if these questions have been asked before but I honestly don't know if the other 
> questions I've seen are actually asking the same question, just cause I'm befuddled. 
> Also I have done this:
> https://teaching.csse.uwa.edu.au/units/CITS2002/labsheets/install-linux.php
> 
> Pretty much I'm confused on how to open the C file as to start editing it and 
> executing it etc.
> 
> Thank you so much.

I'm not a lecturer or a lab facilitator so by all means I could be somewhat wrong.

1) Confusing question but the idea if your intending to use docker is to run ubuntu using 
docker through powershell. Docker is an application that you can interact with through ur 
powershell, the docker application is quite interesting, it creates "images" (think of it as 
a little portal) of different Operating systems (in our case, Ubuntu) within ur local/host OS 
(yours being Windows). 

Within the images there are "containers" (I could be wrong but I imagine they are the 
different user's of the OS), throughout the unit you can create new containers as you like, 
or keep coming back to the same container so your files in that container can be interacted 
with each session. You will be using your powershell to communicate with docker through 
commands and open your little Ubuntu portal, in this portal you should be doing your software 
development in this unit.

2) Navigate to the folder holding rotate.c through your powershell and then type "vim 
rotate.c" to edit the file. However, as stated before this file should be within your 
container, you can do this by using docker commands to copy or simply creating a new c file 
in the container and copy and pasting the text.

3) This question is also confusing and I think it's important to understand the role of 
certain tools we are using:
Docker - application we use to create images of other OS within our host OS, with each 
container representing a different user (with different folders) of those images
VIM - a simple text editor
Powershell - a command driven application that we use to communicate to our OS and it's 
applications.

With that in mind, through powershell we communicate to our docker application and instruct 
it to open our myubuntu container ("portal"). Once opened the prompt will change to "root" 
with a bunch of numbers/letters indicating the powershell is now communicating to the 
container. We then can create our own files in this container, including rotate.c, we can use 
VIM to create such files since it is a text editor (high level software language files are 
essentially just text files with special syntax). Once done you can simply exit your 
container by communicating through powershell to the docker container, putting you back onto 
your host OS command-line (powershell).

I've ommitted specific commands used etc because it would take ages laying them all out, what 
helps is understanding what each tool use is, and then researching how to do certain tasks 
that are in each tools breadth. Such as opening and editing a file in vim, or navigating to a 
different folder in powershell, or creating a new container in your docker container.

Hope this helps.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result TFIDF                         
Subject:How to actually open rotate.c           

Body:ANONYMOUS wrote:

> Hey,
> 
> I've got a few questions that I need clarifying;
> 
> 1) When using ubuntu, do I use it through powershell (I use Microsoft) and docker 
> desktop, or do I directly use it on ubuntu? (Could be a confusing question but I 
> honestly have confused myself siginificantly)
> 
> 2) I downloaded VIM, supposedly the improved version of Vi, how do I open the rotate.c 
> file through VIM?
> 
> 3) Depending on the answers to the other questions, this one may be negligent but do I 
> run an ubuntu (myubuntu) container on powershell then supposedly access the rotate.c 
> file through VIM on powershell, and if so how do I access files on my laptop in the 
> terminal?
> 
> Sorry if these questions have been asked before but I honestly don't know if the other 
> questions I've seen are actually asking the same question, just cause I'm befuddled. 
> Also I have done this:
> https://teaching.csse.uwa.edu.au/units/CITS2002/labsheets/install-linux.php
> 
> Pretty much I'm confused on how to open the C file as to start editing it and 
> executing it etc.
> 
> Thank you so much.

I'm not a lecturer or a lab facilitator so by all means I could be somewhat wrong.

1) Confusing question but the idea if your intending to use docker is to run ubuntu using 
docker through powershell. Docker is an application that you can interact with through ur 
powershell, the docker application is quite interesting, it creates "images" (think of it as 
a little portal) of different Operating systems (in our case, Ubuntu) within ur local/host OS 
(yours being Windows). 

Within the images there are "containers" (I could be wrong but I imagine they are the 
different user's of the OS), throughout the unit you can create new containers as you like, 
or keep coming back to the same container so your files in that container can be interacted 
with each session. You will be using your powershell to communicate with docker through 
commands and open your little Ubuntu portal, in this portal you should be doing your software 
development in this unit.

2) Navigate to the folder holding rotate.c through your powershell and then type "vim 
rotate.c" to edit the file. However, as stated before this file should be within your 
container, you can do this by using docker commands to copy or simply creating a new c file 
in the container and copy and pasting the text.

3) This question is also confusing and I think it's important to understand the role of 
certain tools we are using:
Docker - application we use to create images of other OS within our host OS, with each 
container representing a different user (with different folders) of those images
VIM - a simple text editor
Powershell - a command driven application that we use to communicate to our OS and it's 
applications.

With that in mind, through powershell we communicate to our docker application and instruct 
it to open our myubuntu container ("portal"). Once opened the prompt will change to "root" 
with a bunch of numbers/letters indicating the powershell is now communicating to the 
container. We then can create our own files in this container, including rotate.c, we can use 
VIM to create such files since it is a text editor (high level software language files are 
essentially just text files with special syntax). Once done you can simply exit your 
container by communicating through powershell to the docker container, putting you back onto 
your host OS command-line (powershell).

I've ommitted specific commands used etc because it would take ages laying them all out, what 
helps is understanding what each tool use is, and then researching how to do certain tasks 
that are in each tools breadth. Such as opening and editing a file in vim, or navigating to a 
different folder in powershell, or creating a new container in your docker container.

Hope this helps.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
<<<<----------------------------------->>>>
|                                         |
|                                         |
Result USE                         
Subject:How to actually open rotate.c           

Body:Thanks for your great reply Lewis.

Hopefully we can encourage more students to answer each others' questions, here, by offering their 
suggestions and success-stories.                
|                                         |
|                                         |
<<<<----------------------------------->>>>
----------------------------------------------------------------------------------------------------
